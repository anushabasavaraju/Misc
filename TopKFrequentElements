/* Given an integer array nums and an integer k, return the k most frequent elements. You may return the answer in any order.

 

Example 1:

Input: nums = [1,1,1,2,2,3], k = 2
Output: [1,2]
Example 2:

Input: nums = [1], k = 1
Output: [1]
 

Constraints:

1 <= nums.length <= 105
-104 <= nums[i] <= 104
k is in the range [1, the number of unique elements in the array].
It is guaranteed that the answer is unique.
*/
function topKFrequent(nums: number[], k: number): number[] {
    let result: number[] = []
    let dict : Record<number, number> = {}

    for(let i = 0; i < nums.length; i++)
    {
        if(dict.hasOwnProperty(nums[i]))
        dict[nums[i]]++
        else
        dict[nums[i]] = 1
    }

    let freq = Object.entries(dict)
    let sorted = freq.sort((a,b) => b[1] - a[1])

    for(let j = 0; j< k; j++)
    {
        result[j] = Number(sorted[j][0])
    }
    return result
    
};
